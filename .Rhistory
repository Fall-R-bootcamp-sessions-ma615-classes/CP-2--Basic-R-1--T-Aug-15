x <- rnorm(n = 1,
mean = center[1],
sd = sqrt(size))
y <- rnorm(n = 1,
mean = center[2],
sd = sqrt(size))
x2 <- x + rnorm(size)
y2 <- y + rnorm(size)
xs <- c(x,x2)
ys <- c(y,y2)
thisMan <- as.data.frame(mandelbrot(xlim = c(min(xs),max(xs)),
ylim = c(min(ys),max(ys)),
iterations = 100))
print(var(thisMan$value))
if(var(thisMan$value)==0){
center = c(center[1]+rnorm(1),center[2]+rnorm(1))
} else {
unmet = FALSE
}
}
cols <- RColorBrewer::brewer.pal(11, "Spectral")
pal <- mandelbrot_palette(cols, fold = FALSE)
plot(thisMan,pal)
}
selectView(1,c(0,-0.65))
selectView <- function(size = 10, start = c(0,-0.75)) {
center <- start
selectView <- function(size = 10, start = c(0,-0.75)) {
center <- start
unmet = TRUE
while(unmet){
x <- rnorm(n = 1,
mean = center[1],
sd = sqrt(size))
y <- rnorm(n = 1,
mean = center[2],
sd = sqrt(size))
x2 <- x + rnorm(size)
y2 <- y + rnorm(size)
xs <- c(x,x2)
ys <- c(y,y2)
thisMan <- as.data.frame(mandelbrot(xlim = c(min(xs),max(xs)),
ylim = c(min(ys),max(ys)),
iterations = 100))
print(var(thisMan$value))
if(var(thisMan$value)==0){
center = c(center[1]+rnorm(1),center[2]+rnorm(1))
} else {
unmet = FALSE
}
}
cols <- RColorBrewer::brewer.pal(11, "Spectral")
pal <- mandelbrot_palette(cols, fold = FALSE)
return(c(thisMan,pal))
}
selectView(1,c(0,-0.65))
m<-selectView(1,c(0,-0.65))
plot(m[1],m[2])
selectView <- function(size = 10, start = c(0,-0.75)) {
center <- start
unmet = TRUE
while(unmet){
x <- rnorm(n = 1,
mean = center[1],
sd = sqrt(size))
y <- rnorm(n = 1,
mean = center[2],
sd = sqrt(size))
x2 <- x + rnorm(size)
y2 <- y + rnorm(size)
xs <- c(x,x2)
ys <- c(y,y2)
thisMan <- mandelbrot(xlim = c(min(xs),max(xs)),
ylim = c(min(ys),max(ys)),
iterations = 100)
print(var(as.data.frame(thisMan)$value))
if(var(as.data.frame(thisMan$value))==0){
center = c(center[1]+rnorm(1),center[2]+rnorm(1))
} else {
unmet = FALSE
}
}
cols <- RColorBrewer::brewer.pal(11, "Spectral")
pal <- mandelbrot_palette(cols, fold = FALSE)
return(c(thisMan,pal))
}
m<-selectView(1,c(0,-0.65))
selectView <- function(size = 10, start = c(0,-0.75)) {
center <- start
unmet = TRUE
while(unmet){
x <- rnorm(n = 1,
mean = center[1],
sd = sqrt(size))
y <- rnorm(n = 1,
mean = center[2],
sd = sqrt(size))
x2 <- x + rnorm(size)
y2 <- y + rnorm(size)
xs <- c(x,x2)
ys <- c(y,y2)
thisMan <- mandelbrot(xlim = c(min(xs),max(xs)),
ylim = c(min(ys),max(ys)),
iterations = 100)
print(var(as.data.frame(thisMan)$value))
if(var(as.data.frame(thisMan)$value)==0){
center = c(center[1]+rnorm(1),center[2]+rnorm(1))
} else {
unmet = FALSE
}
}
cols <- RColorBrewer::brewer.pal(11, "Spectral")
pal <- mandelbrot_palette(cols, fold = FALSE)
return(c(thisMan,pal))
}
m<-selectView(1,c(0,-0.65))
plot(m[1],m[2])
m
selectView <- function(size = 10, start = c(0,-0.75)) {
center <- start
unmet = TRUE
while(unmet){
x <- rnorm(n = 1,
mean = center[1],
sd = sqrt(size))
y <- rnorm(n = 1,
mean = center[2],
sd = sqrt(size))
x2 <- x + rnorm(size)
y2 <- y + rnorm(size)
xs <- c(x,x2)
ys <- c(y,y2)
thisMan <- mandelbrot(xlim = c(min(xs),max(xs)),
ylim = c(min(ys),max(ys)),
iterations = 100)
print(var(as.data.frame(thisMan)$value))
if(var(as.data.frame(thisMan)$value)==0){
center = c(center[1]+rnorm(1),center[2]+rnorm(1))
} else {
unmet = FALSE
}
}
cols <- RColorBrewer::brewer.pal(11, "Spectral")
pal <- mandelbrot_palette(cols, fold = FALSE)
return(list(thisMan,pal))
}
m<-selectView(1,c(0,-0.65))
plot(m[1],m[2])
m
View(m)
plot(m[[1]],m[[2]])
selectView <- function(size = 10, start = c(0,-0.75)) {
center <- start
unmet = TRUE
while(unmet){
x <- rnorm(n = 1,
mean = center[1],
sd = sqrt(size))
y <- rnorm(n = 1,
mean = center[2],
sd = sqrt(size))
x2 <- x + rnorm(size)
y2 <- y + rnorm(size)
xs <- c(x,x2)
ys <- c(y,y2)
thisMan <- mandelbrot(xlim = c(min(xs),max(xs)),
ylim = c(min(ys),max(ys)),
iterations = 100)
print(var(as.data.frame(thisMan)$value))
if(var(as.data.frame(thisMan)$value)>=100){
center = c(center[1]+rnorm(1),center[2]+rnorm(1))
} else {
unmet = FALSE
}
}
cols <- RColorBrewer::brewer.pal(11, "Spectral")
pal <- mandelbrot_palette(cols, fold = FALSE)
return(list(thisMan,pal))
}
m<-selectView(1,c(0,-0.65))
plot(m[[1]],m[[2]])
?list
?matrix
?lm
knitr::opts_chunk$set(echo = TRUE)
megaVector <- c(piVector[1],
piVector[7],
pieVector[pieVector == 3],
eipVector[3:4])
knitr::opts_chunk$set(echo = TRUE)
aVector <- c(1,2,3,4,5)
bVector <- 10:50
cVector <- seq(2,3,by = 0.5)
dVector <- rep(1:2, time = 3)
eVector <- rep(1:2, each = 3)
aVector <- c(2,0,2,3)
tweVector <- 20:16
twe.Vector <- seq(2,1.6,-0.1)
twoVector <- rep(2, time = 8)
sortVector <- sort(aVector)
revVector <- rev(aVector)
counts <- table(aVector) # factors and table go together
uniqueValues <- unique(aVector)
### Append() also
piVector <- c(3,1,4,1,5,9,3)
eipVector <- sort(piVector)
pieVector <- rev(eipVector)
piVector <- c(3,1,4,1,5,9,3)
eipVector <- sort(piVector)
pieVector <- rev(eipVector)
megaVector <- c(piVector[1],
piVector[7],
pieVector[pieVector == 3],
eipVector[3:4])
megaVector <- c(piVector[1],
piVector[7],
pieVector[pieVector %in% c(3)],
eipVector[3:4])
emga
megaVector`
megaVector
piVector[(piVector == 3) | (piVector == 1)]
piVector[(piVector == 3) & (piVector == 1)]
piVector[(piVector == 3) | (piVector == 1)]
rivers
?rivers
noMeanRivers <- rivers[(rivers < 200) | (rivers > 600)]
river301 <- rivers[rivers == 301]
river301
specRivers <- rivers[(((rivers > 100) & (rivers < 200)) | ((rivers > 500) & (rivers < 600))) & (rivers != 135)]
specRivers
rivers[rivers < 200]
paste("A river", miles, "long is exactly as long as", "frName")
paste("A river", miles, "long is exactly as long as", "frName")
paste("A river", 55, "long is exactly as long as", name)
paste("A river", 55, "long is exactly as long as", "name")
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
# this is wrong so far, many things will pass many checks... woooof
frName <- "Feather River"
dmName <- "Des Moines River"
rgName <- "Rio Grande River"
# miles < fr
ifelse(miles < fr, print(paste("A river", miles, "miles long is shorter than", frName)))
# miles == fr
ifelse(miles == fr, print(paste("A river", miles, "miles long is exactly as long as", frName)))
# fr < miles < bp1
ifelse((miles < fr) & (miles < bp1), print(paste("A river", miles, "miles long is longer than", frName)))
# bp1 <= miles < dm
ifelse((miles >= bp1) & (miles < dm), print(paste("A river", miles, "miles long is shorter than", dmName)))
# miles == dm
ifelse(miles == dm, print(paste("A river", miles, "miles long is exactly as long as", dmName)))
# dm < miles < bp2
ifelse((miles > dm) & (miles < bp2), print(paste("A river", miles, "miles long is longer than", dmName)))
# bp2 <= miles < rg
ifelse((miles >= bp2) & (miles < rg), print(paste("A river", miles, "miles long is shorter than", rgName)))
# miles == rg
ifelse(miles == fr, print(paste("A river", miles, "miles long is exactly as long as", rgName)))
# miles > rg
ifelse(miles > rg, print(paste("A river", miles, "miles long is longer than", rgName)))
}
riverReport(rivers)
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
# this is wrong so far, many things will pass many checks... woooof
frName <- "Feather River"
dmName <- "Des Moines River"
rgName <- "Rio Grande River"
# miles < fr
ifelse(miles < fr, print(paste("A river", miles, "miles long is shorter than", frName)),)
# miles == fr
ifelse(miles == fr, print(paste("A river", miles, "miles long is exactly as long as", frName)),)
# fr < miles < bp1
ifelse((miles < fr) & (miles < bp1), print(paste("A river", miles, "miles long is longer than", frName)),)
# bp1 <= miles < dm
ifelse((miles >= bp1) & (miles < dm), print(paste("A river", miles, "miles long is shorter than", dmName)),)
# miles == dm
ifelse(miles == dm, print(paste("A river", miles, "miles long is exactly as long as", dmName)),)
# dm < miles < bp2
ifelse((miles > dm) & (miles < bp2), print(paste("A river", miles, "miles long is longer than", dmName)),)
# bp2 <= miles < rg
ifelse((miles >= bp2) & (miles < rg), print(paste("A river", miles, "miles long is shorter than", rgName)),)
# miles == rg
ifelse(miles == fr, print(paste("A river", miles, "miles long is exactly as long as", rgName)),)
# miles > rg
ifelse(miles > rg, print(paste("A river", miles, "miles long is longer than", rgName)),)
}
riverReport(river301)
if(TRUE,1)
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
# this is wrong so far, many things will pass many checks... woooof
frName <- "Feather River"
dmName <- "Des Moines River"
rgName <- "Rio Grande River"
# miles < fr
if(miles < fr){print(paste("A river", miles, "miles long is shorter than", frName))}
# miles == fr
if(miles == fr{print(paste("A river", miles, "miles long is exactly as long as", frName))}
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
# this is wrong so far, many things will pass many checks... woooof
frName <- "Feather River"
dmName <- "Des Moines River"
rgName <- "Rio Grande River"
# miles < fr
if(miles < fr){print(paste("A river", miles, "miles long is shorter than", frName))}
# miles == fr
if(miles == fr){print(paste("A river", miles, "miles long is exactly as long as", frName))}
# fr < miles < bp1
if((miles < fr) & (miles < bp1)){print(paste("A river", miles, "miles long is longer than", frName))}
# bp1 <= miles < dm
if((miles >= bp1) & (miles < dm)){print(paste("A river", miles, "miles long is shorter than", dmName))}
# miles == dm
if(miles == dm){print(paste("A river", miles, "miles long is exactly as long as", dmName))}
# dm < miles < bp2
if((miles > dm) & (miles < bp2)){print(paste("A river", miles, "miles long is longer than", dmName))}
# bp2 <= miles < rg
if((miles >= bp2) & (miles < rg)){print(paste("A river", miles, "miles long is shorter than", rgName))}
# miles == rg
if(miles == fr){print(paste("A river", miles, "miles long is exactly as long as", rgName))}
# miles > rg
if(miles > rg){print(paste("A river", miles, "miles long is longer than", rgName))}
}
riverReport(river301)
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
frName <- "the Feather River."
dmName <- "the Des Moines River."
rgName <- "the Rio Grande River."
# miles < fr
if(miles < fr){print(paste("A river", miles, "miles long is shorter than", frName))}
# miles == fr
if(miles == fr){print(paste("A river", miles, "miles long is exactly as long as", frName))}
# fr < miles < bp1
if((miles < fr) & (miles < bp1)){print(paste("A river", miles, "miles long is longer than", frName))}
# bp1 <= miles < dm
if((miles >= bp1) & (miles < dm)){print(paste("A river", miles, "miles long is shorter than", dmName))}
# miles == dm
if(miles == dm){print(paste("A river", miles, "miles long is exactly as long as", dmName))}
# dm < miles < bp2
if((miles > dm) & (miles < bp2)){print(paste("A river", miles, "miles long is longer than", dmName))}
# bp2 <= miles < rg
if((miles >= bp2) & (miles < rg)){print(paste("A river", miles, "miles long is shorter than", rgName))}
# miles == rg
if(miles == fr){print(paste("A river", miles, "miles long is exactly as long as", rgName))}
# miles > rg
if(miles > rg){print(paste("A river", miles, "miles long is longer than", rgName))}
}
riverReport(river301)
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
frName <- "the Feather River."
dmName <- "the Des Moines River."
rgName <- "the Rio Grande River."
report <- NA
# miles < fr
if(miles < fr){report <- paste("A river", miles, "miles long is shorter than", frName)}
# miles == fr
if(miles == fr){report <- paste("A river", miles, "miles long is exactly as long as", frName)}
# fr < miles < bp1
if((miles < fr) & (miles < bp1)){report <- paste("A river", miles, "miles long is longer than", frName)}
# bp1 <= miles < dm
if((miles >= bp1) & (miles < dm)){report <- paste("A river", miles, "miles long is shorter than", dmName)}
# miles == dm
if(miles == dm){report <- paste("A river", miles, "miles long is exactly as long as", dmName)}
# dm < miles < bp2
if((miles > dm) & (miles < bp2)){report <- paste("A river", miles, "miles long is longer than", dmName)}
# bp2 <= miles < rg
if((miles >= bp2) & (miles < rg)){report <- paste("A river", miles, "miles long is shorter than", rgName)}
# miles == rg
if(miles == fr){report <- paste("A river", miles, "miles long is exactly as long as", rgName)}
# miles > rg
if(miles > rg){report <- paste("A river", miles, "miles long is longer than", rgName)}
}
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
frName <- "the Feather River."
dmName <- "the Des Moines River."
rgName <- "the Rio Grande River."
report <- NA
# miles < fr
if(miles < fr){report <- paste("A river", miles, "miles long is shorter than", frName)}
# miles == fr
if(miles == fr){report <- paste("A river", miles, "miles long is exactly as long as", frName)}
# fr < miles < bp1
if((miles < fr) & (miles < bp1)){report <- paste("A river", miles, "miles long is longer than", frName)}
# bp1 <= miles < dm
if((miles >= bp1) & (miles < dm)){report <- paste("A river", miles, "miles long is shorter than", dmName)}
# miles == dm
if(miles == dm){report <- paste("A river", miles, "miles long is exactly as long as", dmName)}
# dm < miles < bp2
if((miles > dm) & (miles < bp2)){report <- paste("A river", miles, "miles long is longer than", dmName)}
# bp2 <= miles < rg
if((miles >= bp2) & (miles < rg)){report <- paste("A river", miles, "miles long is shorter than", rgName)}
# miles == rg
if(miles == fr){report <- paste("A river", miles, "miles long is exactly as long as", rgName)}
# miles > rg
if(miles > rg){report <- paste("A river", miles, "miles long is longer than", rgName)}
print(report)
return(report)
}
riverReport(river301)
riverReport(rivers)
sapply(rivers,FUN = riverReport())
sapply(rivers,FUN = riverReport
)
rivers[108]
rivers[129]
river[52]
rivers[52]
525 - 73
452 /2
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
frName <- "the Feather River."
dmName <- "the Des Moines River."
rgName <- "the Rio Grande River."
report <- NA
# miles < fr
if(miles < fr){report <- paste("A river", miles, "miles long is shorter than", frName)}
# miles == fr
if(miles == fr){report <- paste("A river", miles, "miles long is exactly as long as", frName)}
# fr < miles < bp1
if((miles > fr) & (miles < bp1)){report <- paste("A river", miles, "miles long is longer than", frName)}
# bp1 <= miles < dm
if((miles >= bp1) & (miles < dm)){report <- paste("A river", miles, "miles long is shorter than", dmName)}
# miles == dm
if(miles == dm){report <- paste("A river", miles, "miles long is exactly as long as", dmName)}
# dm < miles < bp2
if((miles > dm) & (miles < bp2)){report <- paste("A river", miles, "miles long is longer than", dmName)}
# bp2 <= miles < rg
if((miles >= bp2) & (miles < rg)){report <- paste("A river", miles, "miles long is shorter than", rgName)}
# miles == rg
if(miles == fr){report <- paste("A river", miles, "miles long is exactly as long as", rgName)}
# miles > rg
if(miles > rg){report <- paste("A river", miles, "miles long is longer than", rgName)}
print(report)
return(report)
}
sapply(rivers, riverReport)
hist(rivers)
knitr::opts_chunk$set(echo = TRUE)
sapply(rivers, riverReport)
knitr::opts_chunk$set(echo = TRUE)
riverReport <- function(miles) {
fr <- 73
dm <- 525
rg <- 1896
bp1 <- (dm - fr)/2
bp2 <- (rg - dm)/2
frName <- "the Feather River."
dmName <- "the Des Moines River."
rgName <- "the Rio Grande River."
report <- NA
# miles < fr
if(miles < fr){report <- paste("A river", miles, "miles long is shorter than", frName)}
# miles == fr
if(miles == fr){report <- paste("A river", miles, "miles long is exactly as long as", frName)}
# fr < miles < bp1
if((miles > fr) & (miles < bp1)){report <- paste("A river", miles, "miles long is longer than", frName)}
# bp1 <= miles < dm
if((miles >= bp1) & (miles < dm)){report <- paste("A river", miles, "miles long is shorter than", dmName)}
# miles == dm
if(miles == dm){report <- paste("A river", miles, "miles long is exactly as long as", dmName)}
# dm < miles < bp2
if((miles > dm) & (miles < bp2)){report <- paste("A river", miles, "miles long is longer than", dmName)}
# bp2 <= miles < rg
if((miles >= bp2) & (miles < rg)){report <- paste("A river", miles, "miles long is shorter than", rgName)}
# miles == rg
if(miles == fr){report <- paste("A river", miles, "miles long is exactly as long as", rgName)}
# miles > rg
if(miles > rg){report <- paste("A river", miles, "miles long is longer than", rgName)}
print(report)
return(report)
}
```{r}
?c
typeof(pi)
sapply(rivers, riverReport)
